@page "/fetchdata"
@using System.Text.Json.Serialization
@inject HttpClient Http

<PageTitle>Authors</PageTitle>

<h1>Authors</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (_authorList?.Authors == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>First Name</th>
                <th>Middle Name</th>
                <th>Last Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var author in _authorList.Authors)
            {
                <tr>
                    <td>@author.Id</td>
                    <td>@author.FirstName</td>
                    <td>@author.MiddleName</td>
                    <td>@author.LastName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private AuthorList? _authorList;

    protected override async Task OnInitializedAsync()
    {
        _authorList = await Http.GetFromJsonAsync<AuthorList>("data-api/rest/Author");
    }

    public class AuthorList
    {
        [JsonPropertyName("value")]
        public Author[]? Authors { get; set; }
    }

    public class Author
    {
        [JsonPropertyName("id")]
        public int Id { get; set; }

        [JsonPropertyName("first_name")]
        public string? FirstName { get; set; }

        [JsonPropertyName("middle_name")]
        public string? MiddleName { get; set; }

        [JsonPropertyName("last_name")]
        public string? LastName { get; set; }
    }
}
